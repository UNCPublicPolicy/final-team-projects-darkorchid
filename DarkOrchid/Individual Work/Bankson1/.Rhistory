ggplot(data, aes(x=effective_no_parties))+
geom_density()+
facet_wrap(~country)
ggplot(data, aes(x=effective_no_parties, y=rep_threshold))+
geom_point()+
facet_wrap(~country)
ggplot(data, aes(x=effective_no_parties, y=rep_threshold))+
geom_smooth(method="lm")
geom_point()
ggplot(data, aes(x=unemployment), fill = country)+
geom_histogram()
data%>% select_if(is.numeric) %>%
ggpairs(progress=FALSE)
ggplot(data, aes(x=log(unemployment)))+
geom_histogram()
ggplot(data, aes(x=log(unemployment), y=effective_no_parties))+
geom_point()
ggplot(data, aes(x=rep_threshold, y=effective_no_parties))+
geom_smooth(method="lm")+
geom_point()
data <-data %>% mutate(population_log=log(population), gdp_log= log(gdp))
mod4 <- lm(log_extreme_rt_support ~ rep_threshold * effective_no_parties + unemployment + country, data=data)
modother <- lm(log_extreme_rt_support ~ rep_threshold + effective_no_parties + effective_no_parties + country, data=data)
summary(mod4)
plot(mod4)
install.packages("interactions")
library(interactions)
interact_plot(mod4, pred=rep_threshold, modx=effective_no_parties, plot.points=TRUE)
## The interact plot - The independent and dependent variables are plotted, the effective no parties line show the effect of effectivenoparties and since they are not parrallel, that means they
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(moderndive)
library(GGally)
library(naniar)
broaddata<-read_csv(file = "/Users/mac/Documents/R Assignments PLCY 715/DarkOrchid/Bankson/coal_dta_clean2.csv")
tx_data <- filter(broaddata, statename== "Texas")
tx_data <- tx_data%>%select("county", "status", "plant")
tx_data <- filter(tx_data, status== "operating")
dup <- duplicated(tx_data$plant)
tx_data <- subset(tx_data, !dup)
write_csv(tx_data, file = "/Users/mac/Documents/R Assignments PLCY 715/DarkOrchid/Bankson/tx_plant_status.csv")
library(tidyverse)
library(ggplot2)
library(moderndive)
library(GGally)
library(tidyverse)
library(ggplot2)
data <- read_csv("data/transfer.csv")
midpts <- data.frame(cuts = c(10188, 13584, 16980), vals=c(0,0,0))
ggplot(midpts, aes(x=cuts, y=vals)) +
geom_point(size=2) +
geom_hline(yintercept=0, linetype="dashed") +
scale_y_discrete(breaks=NULL) +
geom_segment(aes(x = 11000, y = 0.25, xend = 11000, yend = 0.1),
arrow = arrow(length = unit(0.5, "cm")), color="red") +
geom_segment(aes(x = 15200, y = 0.25, xend = 15200, yend = 0.1),
arrow = arrow(length = unit(0.5, "cm")), color="red") +
labs(x="cutoffs", y="") +
theme_minimal() +
theme(axis.ticks.y=element_blank(), axis.line.y = element_blank(), axis.text.y=element_blank())
library(tidyverse)
library(ggplot2)
library(moderndive)
library(GGally)
library(tidyverse)
library(ggplot2)
data <- read_csv("data/transfer.csv")
midpts <- data.frame(cuts = c(10188, 13584, 16980), vals=c(0,0,0))
ggplot(midpts, aes(x=cuts, y=vals)) +
geom_point(size=2) +
geom_hline(yintercept=0, linetype="dashed") +
scale_y_discrete(breaks=NULL) +
geom_segment(aes(x = 11000, y = 0.25, xend = 11000, yend = 0.1),
arrow = arrow(length = unit(0.5, "cm")), color="red") +
geom_segment(aes(x = 15200, y = 0.25, xend = 15200, yend = 0.1),
arrow = arrow(length = unit(0.5, "cm")), color="red") +
labs(x="cutoffs", y="") +
theme_minimal() +
theme(axis.ticks.y=element_blank(), axis.line.y = element_blank(), axis.text.y=element_blank())
#knitr::opts_chunk$set()
coal_and_health %>% dplyr::select(chronic_lower_respiratory_disease_deaths_per_100_000_people:stateco2) %>%
ggcorr()
#knitr::opts_chunk$set()
library(tidyverse)
library(ggplot2)
library(GGally)
library(skimr)
library(naniar)
library(patchwork)
coal_and_health <- read_csv(file ="/Users/mac/Documents/R Assignments PLCY 715/final-team-projects-darkorchid/DarkOrchid/Merged_and_Cleaned_Data_Darkorchid4.csv")
View(data)
summary(data)
summary(data)
data %>% dplyr::select(state:pop82) %>% ggpairs()
summary(data)
data %>% dplyr::select(state:pop82) %>% ggcorr()
summary(data)
ggplot(data, aes(x=pop82))+
geom_point()
summary(data)
ggplot(data, aes(x=pop82, y=literate91)+
geom_point()
data %>% dplyr::select(state:pop82) %>% ggcorr()
summary(data)
ggplot(data, aes(x=pop82, y=literate91))+
geom_point()
data %>% dplyr::select(state:pop82) %>% ggcorr()
summary(data)
ggplot(data, aes(x=pop82, y=literate91))+
geom_point()
ggplot(data, aes(x=pop82))+
geom_histogram
summary(data)
ggplot(data, aes(x=pop82, y=literate91))+
geom_point()
ggplot(data, aes(x=pop82))+
geom_histogram()
data %>% dplyr::select(state:pop82) %>% ggcorr()
summary(data)
ggplot(data, aes(x=pop82, y=literate91))+
geom_point()
ggplot(data, aes(x=pop82))+
geom_histogram()
ggplot(data, aes(x=educ80, y=poverty80, color=state))+
geom_point()
data %>% dplyr::select(state:pop82) %>% ggcorr()
summary(data)
ggplot(data, aes(x=pop82, y=literate91))+
geom_point()
ggplot(data, aes(x=pop82))+
geom_histogram()
ggplot(data, aes(x=educ80, y=poverty80, color=state))+
geom_point()
ggplot(data, aes(x=pop82, y=poverty80, color=state))+
geom_point()
data %>% dplyr::select(state:pop82) %>% ggcorr()
summary(data)
ggplot(data, aes(x=pop82, y=literate91))+
geom_point()
ggplot(data, aes(x=pop82))+
geom_histogram()
ggplot(data, aes(x=educ80, y=poverty80, color=state))+
geom_point()
ggplot(data, aes(x=pop82, y=poverty80, color=state))+
geom_point()
ggplot(data, aes(x=...1, y=poverty80, color=state))+
geom_point()
data %>% dplyr::select(state:pop82) %>% ggcorr()
summary(data)
library(wesanderson)
ggplot(data, aes(x=pop82, y=literate91))+
geom_point()
ggplot(data, aes(x=pop82))+
geom_histogram()
ggplot(data, aes(x=educ80, y=poverty80, color=state))+
geom_point()
ggplot(data, aes(x=pop82, y=poverty80, color=state))+
geom_point()
ggplot(data, aes(x=...1, y=poverty80, color=state))+
geom_point()
data %>% dplyr::select(state:pop82) %>% ggcorr()
summary(data)
library(wesanderson)
ggplot(data, aes(x=pop82, y=literate91))+
geom_point()
ggplot(data, aes(x=pop82))+
geom_histogram()
ggplot(data, aes(x=educ80, y=poverty80, color=state))+
geom_point()
educ_pov_mod <- lm(poverty80~educ80, data=data)
summary(educ_pov_mod)
ggplot(data, aes(x=pop82, y=poverty80, color=state))+
geom_point()
ggplot(data, aes(x=...1, y=poverty80, color=state))+
geom_point()
data %>% dplyr::select(state:pop82) %>% ggcorr()
summary(data)
library(wesanderson)
ggplot(data, aes(x=pop82, y=literate91))+
geom_point()
ggplot(data, aes(x=pop82))+
geom_histogram()
ggplot(data, aes(x=educ80, y=poverty80, color=state))+
geom_point()
data_longer<-data %>% pivot_longer(c(literate91:educ80), names_to="variable", values_to="value")
educ_pov_mod <- lm(poverty80~educ80, data=data)
summary(educ_pov_mod)
ggplot(data, aes(x=pop82, y=poverty80, color=state))+
geom_point()
ggplot(data, aes(x=...1, y=poverty80, color=state))+
geom_point()
data %>% dplyr::select(state:pop82) %>% ggcorr()
## pairs plot by John Emerson
data%>% select_if(isnumeric)%>%ggpairs(progress=FALSE)
mid1 <-((13584-10188)/2+10188)
mid2 <-((16980-13584)/2+13584)
pull(mid1)
mid1 <-((13584-10188)/2+10188)
mid2 <-((16980-13584)/2+13584)
(mid1)
(mid2)
data <- data %>%mutate(pscore=case_when(pop82<= mid1 ~ ((pop82-10188)/10188*100), pop82<= mid2 ~ ((pop82-13584)/13584*100)), pop82 >= cat3 ~ (pop82-16980)/16980*100))
data <- data %>%mutate(pscore=case_when(pop82<= mid1 ~ ((pop82-10188)/10188*100), pop82<= mid2 ~ ((pop82-13584)/13584*100)), pop82 >= cat3 ~ (pop82-16980)/16980*100)
data <- data %>%
mutate(pscore = case_when(pop82 <= mid1 ~ ((pop82-10188)/10188*100),
pop82<= mid2 ~ (pop82-13584)/13584*100),
pop82 >= cat3 ~ (pop82-16980)/16980*100))
data <- data %>%
mutate(pscore = case_when(pop82 <= mid1 ~ ((pop82-10188)/10188*100),
pop82<= mid2 ~ (pop82-13584)/13584*100),
TRUE ~ (pop82-16980)/16980*100))
data <- data %>%
mutate(pscore = case_when(pop82 <= mid1 ~ ((pop82-10188)/10188*100),
pop82<= mid2 ~ (pop82-13584)/13584*100),
TRUE ~ (pop82-16980)/16980*100)
data <- data %>%
mutate(pscore = case_when(pop82 <= mid1 ~ ((pop82-10188)/10188*100),
pop82<= mid2 ~ (pop82-13584)/13584*100),
TRUE ~ (pop82-16980)/16980*100)
# data <- data %>%
# mutate(pscore = case_when(pop82 <= mid1 ~ ((pop82-10188)/10188*100),
#pop82<= mid2 ~ (pop82-13584)/13584*100),
#TRUE ~ (pop82-16980)/16980*100)
data <- data %>% mutate(pscore = case_when (pop82 <= mid1 ~ (pop82 - mid1)/mid1 * 100,
pop82 <= mid2 ~ (pop82 - mid2)/mid2 * 100,
TRUE ~ (pop82 - 16980)/16980 * 100))
# data <- data %>%
# mutate(pscore = case_when(pop82 <= mid1 ~ ((pop82-10188)/10188*100),
#pop82<= mid2 ~ (pop82-13584)/13584*100),
#TRUE ~ (pop82-16980)/16980*100)
data <- data %>% mutate(pscore = case_when (pop82 <= mid1 ~ (pop82 - mid1)/mid1 * 100,
pop82 <= mid2 ~ (pop82 - mid2)/mid2 * 100,
TRUE ~ (pop82 - 16980)/16980 * 100))
data.below <- data %>% filter(pscore>= -3, pscore < 0)
data.above <- data %>% filter(pscore > 0)
educ.fit.below <- lm(educ91 ~ pscore, data=data.below)
educ.fit.above <- lm(educ91 ~ pscore, data = data.above)
summary(data)
library(wesanderson)
ggplot(data, aes(x=pop82, y=literate91))+
geom_point()
ggplot(data, aes(x=pop82))+
geom_histogram()
ggplot(data, aes(x=educ80, y=poverty80, color=state))+
geom_point()
data_longer<-data %>% pivot_longer(c(literate91:educ80), names_to="variable", values_to="value")
educ_pov_mod <- lm(poverty80~educ80, data=data)
summary(educ_pov_mod)
ggplot(data, aes(x=pop82, y=poverty80, color=state))+
geom_point()
ggplot(data, aes(x=...1, y=poverty80, color=state))+
geom_point()
data %>% dplyr::select(state:pop82) %>% ggcorr()
## pairs plot by John Emerson
data%>% select_if(isnumeric)%>%ggpairs(progress=FALSE)
summary(data)
library(wesanderson)
ggplot(data, aes(x=pop82, y=literate91))+
geom_point()
ggplot(data, aes(x=pop82))+
geom_histogram()
ggplot(data, aes(x=educ80, y=poverty80, color=state))+
geom_point()
data_longer<-data %>% pivot_longer(c(literate91:educ80), names_to="variable", values_to="value")
educ_pov_mod <- lm(poverty80~educ80, data=data)
summary(educ_pov_mod)
ggplot(data, aes(x=pop82, y=poverty80, color=state))+
geom_point()
ggplot(data, aes(x=...1, y=poverty80, color=state))+
geom_point()
data %>% dplyr::select(state:pop82) %>% ggcorr()
## pairs plot by John Emerson
data%>% select_if((isnumeric)%>%ggpairs(progress=FALSE))
summary(data)
library(wesanderson)
ggplot(data, aes(x=pop82, y=literate91))+
geom_point()
ggplot(data, aes(x=pop82))+
geom_histogram()
ggplot(data, aes(x=educ80, y=poverty80, color=state))+
geom_point()
data_longer<-data %>% pivot_longer(c(literate91:educ80), names_to="variable", values_to="value")
educ_pov_mod <- lm(poverty80~educ80, data=data)
summary(educ_pov_mod)
ggplot(data, aes(x=pop82, y=poverty80, color=state))+
geom_point()
ggplot(data, aes(x=...1, y=poverty80, color=state))+
geom_point()
data %>% dplyr::select(state:pop82) %>% ggcorr()
## pairs plot by John Emerson
data%>% select_if((is.numeric)%>%ggpairs(progress=FALSE))
summary(data)
library(wesanderson)
ggplot(data, aes(x=pop82, y=literate91))+
geom_point()
ggplot(data, aes(x=pop82))+
geom_histogram()
ggplot(data, aes(x=educ80, y=poverty80, color=state))+
geom_point()
data_longer<-data %>% pivot_longer(c(literate91:educ80), names_to="variable", values_to="value")
educ_pov_mod <- lm(poverty80~educ80, data=data)
summary(educ_pov_mod)
ggplot(data, aes(x=pop82, y=poverty80, color=state))+
geom_point()
ggplot(data, aes(x=...1, y=poverty80, color=state))+
geom_point()
data %>% dplyr::select(state:pop82) %>% ggcorr()
## pairs plot by John Emerson
data %>% select_if((is.numeric)%>%ggpairs(progress=FALSE))
library(tidyverse)
library(ggplot2)
library(moderndive)
library(GGally)
library(janitor)
library(dplyr)
coalplants <- read_csv(file = "/Users/mac/Documents/R Assignments PLCY 715/final-team-projects-darkorchid/DarkOrchid/Bankson/CoalPlants2.csv")
colnames(coalplants)
coalplants <- clean_names(coalplants)
coalplants <- coalplants %>% filter(country == "United States")
coalplants <- coalplants %>% select(parent_id, unit, subnational_unit_province_state, plant, status, year, local_area_taluk_county, latitude, longitude )
coalplants <- rename(coalplants, county = local_area_taluk_county)
counties <- read_csv(file = "/Users/mac/Documents/R Assignments PLCY 715/DarkOrchid/Bankson/uscounties.csv")
library(tidyverse)
library(ggplot2)
library(moderndive)
library(GGally)
library(janitor)
library(dplyr)
coalplants <- read_csv(file = "/Users/mac/Documents/R Assignments PLCY 715/final-team-projects-darkorchid/DarkOrchid/Bankson/CoalPlants2.csv")
colnames(coalplants)
coalplants <- clean_names(coalplants)
coalplants <- coalplants %>% filter(country == "United States")
coalplants <- coalplants %>% select(parent_id, unit, subnational_unit_province_state, plant, status, year, local_area_taluk_county, latitude, longitude )
coalplants <- rename(coalplants, county = local_area_taluk_county)
counties <- read_csv(file = "/Users/mac/Documents/R Assignments PLCY 715/DarkOrchid/Bankson/uscounties.csv")
library(tidyverse)
library(ggplot2)
library(moderndive)
library(GGally)
library(janitor)
library(dplyr)
coalplants <- read_csv(file = "/Users/mac/Documents/R Assignments PLCY 715/final-team-projects-darkorchid/DarkOrchid/Bankson/CoalPlants2.csv")
colnames(coalplants)
coalplants <- clean_names(coalplants)
coalplants <- coalplants %>% filter(country == "United States")
coalplants <- coalplants %>% select(parent_id, unit, subnational_unit_province_state, plant, status, year, local_area_taluk_county, latitude, longitude )
coalplants <- rename(coalplants, county = local_area_taluk_county)
counties <- read_csv(file = "/Users/mac/Documents/R Assignments PLCY 715/final-team-projects-darkorchid/DarkOrchid/Bankson/uscounties.csv")
head(counties)
colnames(counties)
county_center <- counties %>% select(county, state_name, lat, lng)
joined_locs <- full_join(county_center, coalplants, by = "county")
joined_locs2 <-left_join(county_center, coalplants, by = "county")
coalplants_op <- coalplants %>% filter(status == "operating")
coalplants_op <- distinct(coalplants_op, plant, .keep_all = TRUE)
coal_plants <- coalplants_op %>% select("longitude", "latitude","subnational_unit_province_state" )
coal_plants <- rename(coal_plants, long= longitude, lat = latitude)
county_centroids <- county_center
county_centroids <- rename(county_centroids, long = lng)
county_centroids <- filter(county_centroids, state_name == "Texas")
# install.packages("geosphere")
library(geosphere)
library(dplyr)
library(naniar)
coal_plants <- coal_plants %>%
filter(!is.na(long))
coal_plants <- coal_plants %>%
filter(!is.na(lat))
county_centroids <- county_centroids %>%
filter(!is.na(long))
county_centroids <- county_centroids %>%
filter(!is.na(lat))
dist_mat <- apply(county_centroids[, c("long", "lat")], 1,function(x) apply(coal_plants[, c("long", "lat")], 1, function(y) distm(x,y)))
min_dist <- apply(dist_mat, 1, function(x) {
if (all(is.na(x))) NA
else x[which.min(x[!is.na(x)])]
})
county_centroids <- county_centroids[complete.cases(county_centroids), ]
View(county_centroids)
library(dplyr)
library(geosphere)
# calculate distance between each county centroid and coal plant
distances <- apply(county_centroids[, c("lat", "lon")], 1, function(x) {
apply(coal_plants[, c("lat", "lon")], 1, function(y) distHaversine(x, y))
})
library(dplyr)
library(geosphere)
# calculate distance between each county centroid and coal plant
distances <- apply(county_centroids[, c("lat", "long")], 1, function(x) {
apply(coal_plants[, c("lat", "long")], 1, function(y) distHaversine(x, y))
})
library(dplyr)
library(geosphere)
# calculate distance between each county centroid and coal plant
distances <- apply(county_centroids[, c("lat", "long")], 1, function(x) {
apply(coal_plants[, c("lat", "long")], 1, function(y) distHaversine(x, y))
})
View(coal_plants)
library(dplyr)
library(geosphere)
# calculate distance between each county centroid and coal plant
distances <- apply(county_centroids[, c("lat", "long")], 1, function(x) {
apply(coal_plants[, c("lat", "long")], 1, function(y) distHaversine(x, y))
})
library(dplyr)
library(geosphere)
# calculate distance between each county centroid and coal plant
distances <- apply(county_centroids[, c("lat", "long")], 1, function(x) {
apply(coal_plants[, c("lat", "long")], 1, function(y) distHaversine(x, y))
})
library(tidyverse)
library(ggplot2)
library(moderndive)
library(GGally)
library(janitor)
library(dplyr)
coalplants <- read_csv(file = "/Users/mac/Documents/R Assignments PLCY 715/final-team-projects-darkorchid/DarkOrchid/Bankson/CoalPlants2.csv")
colnames(coalplants)
coalplants <- clean_names(coalplants)
coalplants <- coalplants %>% filter(country == "United States")
coalplants <- coalplants %>% select(parent_id, unit, subnational_unit_province_state, plant, status, year, local_area_taluk_county, latitude, longitude )
coalplants <- rename(coalplants, county = local_area_taluk_county)
counties <- read_csv(file = "/Users/mac/Documents/R Assignments PLCY 715/final-team-projects-darkorchid/DarkOrchid/Bankson/uscounties.csv")
head(counties)
colnames(counties)
county_center <- counties %>% select(county, state_name, lat, lng)
joined_locs <- full_join(county_center, coalplants, by = "county")
joined_locs2 <-left_join(county_center, coalplants, by = "county")
coalplants_op <- coalplants %>% filter(status == "operating")
coalplants_op <- distinct(coalplants_op, plant, .keep_all = TRUE)
coal_plants <- coalplants_op %>% select("latitude", "longitude","subnational_unit_province_state" )
coal_plants <- rename(coal_plants, long= longitude, lat = latitude)
county_centroids <- county_center
county_centroids <- rename(county_centroids, long = lng)
county_centroids <- filter(county_centroids, state_name == "Texas")
# install.packages("geosphere")
library(geosphere)
library(dplyr)
library(naniar)
coal_plants <- coal_plants %>%
filter(!is.na(long))
coal_plants <- coal_plants %>%
filter(!is.na(lat))
county_centroids <- county_centroids %>%
filter(!is.na(long))
county_centroids <- county_centroids %>%
filter(!is.na(lat))
#dist_mat <- apply(county_centroids[, c("long", "lat")], 1,function(x) apply(coal_plants[, c("long", "lat")], 1, function(y) distm(x,y)))
#min_dist <- apply(dist_mat, 1, function(x) {
# if (all(is.na(x))) NA
# else x[which.min(x[!is.na(x)])]
#})
#county_centroids <- county_centroids[complete.cases(county_centroids), ]
library(dplyr)
library(geosphere)
# calculate distance between each county centroid and coal plant
distances <- apply(county_centroids[, c("lat", "long")], 1, function(x) {
apply(coal_plants[, c("lat", "long")], 1, function(y) distHaversine(x, y))
})
library(dplyr)
library(geosphere)
summary(coal_plants)
summary(coal_centroids)
library(dplyr)
library(geosphere)
summary(coal_plants)
summary(coal_centroids)
library(dplyr)
library(geosphere)
summary(coal_plants)
summary(county_centroids)
# calculate distance between each county centroid and coal plant
distances <- apply(county_centroids[, c("lat", "long")], 1, function(x) {
apply(coal_plants[, c("lat", "long")], 1, function(y) distHaversine(x, y))
})
install.packages(geosphere)
library(dplyr)
library(geosphere)
summary(coal_plants)
summary(county_centroids)
# calculate distance between each county centroid and coal plant
distances <- apply(county_centroids[, c("lat", "long")], 1, function(x) {
apply(coal_plants[, c("lat", "long")], 1, function(y) distHaversine(x, y))
})
install.packages(geosphere)
library(dplyr)
library(geosphere)
summary(coal_plants)
summary(county_centroids)
# calculate distance between each county centroid and coal plant
distances <- apply(county_centroids[, c("lat", "long")], 1, function(x) {
apply(coal_plants[, c("lat", "long")], 1, function(y) {
tryCatch(distHaversine(x, y), error = function(e) NA)
})
})
# get the minimum distance for each county
min_distances <- apply(distances, 1, min, na.rm = TRUE)
# add the new column to the county_centroids dataframe using mutate
county_centroids <- county_centroids %>%
mutate(distance_to_nearest_plant = min_distances)
install.packages("geosphere")
library(dplyr)
library(geosphere)
summary(coal_plants)
summary(county_centroids)
# calculate distance between each county centroid and coal plant
distances <- apply(county_centroids[, c("lat", "long")], 1, function(x) {
apply(coal_plants[, c("lat", "long")], 1, function(y) {
tryCatch(distHaversine(x, y), error = function(e) NA)
})
})
